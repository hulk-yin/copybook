{"version":3,"sources":["components/hanzi-writer/index.tsx","components/matts/index.tsx","components/print/index.js","pages/hanzi/index.tsx","pages/setting/index.js","pages/setting/font-list.js","components/icons/index.tsx","layout/index.tsx","pages/inspect/index.tsx","pages/task-list/storage.ts","pages/task-list/service.ts","pages/task-list/uitls.ts","pages/task-clock/components/list/index.tsx","pages/task-clock/components/clock/utils.ts","pages/task-clock/components/clock/index.tsx","pages/task-clock/index.tsx","pages/task-list/components/task-form/typing.d.ts","pages/task-list/components/task-form/task-repeat-type-item.tsx","pages/task-list/components/task-form/task-repeat-day-item.tsx","pages/task-list/components/task-form/task-time-rang-item.tsx","pages/task-list/components/task-form/task-date-rang-item.tsx","pages/task-list/components/task-form/index.tsx","pages/task-list/components/task-form/task-form.tsx","pages/task-list/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["HanziWriter","require","Writer","element","writer","this","write","word","props","children","create","width","height","padding","showOutline","animateCharacter","visible","style","xmlns","ref","el","marginTop","border","id","x1","y1","x2","y2","strokeDasharray","stroke","color","whiteSpace","React","Component","Copybook","state","size","type","fontFamily","font","onClick","setState","margin","Fragment","x","y","dominantBaseline","textAnchor","fontSize","onClose","useState","setVisible","a","onPrint","Promise","resolve","setTimeout","window","print","_czc","push","onCancel","App","sizeTimer","localStorage","getItem","str","setWords","parseInt","printWords","split","map","item","lent","length","ret","slice","console","log","join","words","isPrint","setIsPrint","className","i","key","maxHeight","placeholder","defaultValue","onChange","onBlur","v","setItem","autoHeight","marginBottom","position","top","rightContent","label","value","offset","setSize","setType","setFont","fonts","fontList","labelText","showNumber","max","visualViewport","Math","floor","min","step","clearTimeout","values","selectedIndex","e","nativeEvent","selectedSegmentIndex","data","cols","onOk","filter","history","location","pathname","unselectedTintColor","tintColor","barTintColor","Item","title","icon","selectedIcon","selected","indexOf","onPress","canvasElement","videoElement","navigator","mediaDevices","setWord","useEffect","videoInput","enumerateDevices","then","devices","kind","deviceId","getUserMedia","audio","video","stream","srcObject","ctx","getContext","drawFrame","clearRect","start","end","fillStyle","fillRect","strokeStyle","strokeRect","setLineDash","moveTo","videoPort","lineTo","textAlign","textBaseline","strokeText","requestAnimationFrame","getVideoTracks","stop","autoPlay","left","canvas","TaskStorage","db","reject","request","indexedDB","open","onsuccess","event","target","result","onupgradeneeded","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","onerror","store","getAll","task","add","put","delete","startDate","endDate","sort","b","startTime","transaction","queryByDate","date","dayjs","Date","format","query","timeFormat","time","val","buildDateTime","toDate","setMinutes","str2color","scope","from","to","str2code","replace","$1","charCodeAt","toString","mod","parseFloat","rgbValue","match","TaskList","name","Brief","endTime","getRadian","parts","count","PI","drawClockCalibration","radius","inner","outer","textOffset","beginPath","radian","sin","cos","lineWidth","fillText","drawClockOnePointer","postion","drawClockPointer","taskList","imgUrl","getHours","getMinutes","forEach","scale","arc","closePath","fill","img","document","getElementById","createElement","src","appendChild","drawSector","now","seconds","getSeconds","minutes","hours","Clock","requestID","querySelector","innerWidth","innerHeight","w","h","zX","zY","translate","LayerBack","ctxLayerBack","drawClockBlank","LayerPointer","ctxLayerPointer","drawShand","globalCompositeOperation","drawImage","cancelAnimationFrame","display","Week","clockTasks","updateClockTasks","updateTaskList","useHistory","tasks","onSelect","firstItem","overlay","list","TaskRepeatTypeItem","checked","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","TaskRepeatDayItem","repeatType","index","splice","TaskTimeRangItem","extra","paddingBottom","marks","range","TaskDateRangItem","visibleCalendar","updateVisibleCalendar","arrow","onConfirm","showShortcut","TaskForm","createForm","form","getFieldProps","getFieldsValue","getFieldError","setFieldsValue","validateFields","initialValue","minHeight","backgroundColor","flexDirection","justifyContent","rules","required","error","onErrorClick","Toast","info","getValueFromEvent","days","repeatDays","onSubmit","newTask","updateVisible","updateList","updateCount","editTask","updateEditTask","load","res","onOpenChange","sidebar","update","service","leftContent","goBack","right","text","fontWeight","remove","multipleLine","align","exact","path","component","Hanzi","Setting","Inspect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26e517be.chunk.js","sourcesContent":["import React from 'react';\nimport { Modal } from 'antd-mobile';\nconst HanziWriter = require('hanzi-writer');\nexport default class Writer extends React.Component<{ visible: boolean, onClose: () => void }> {\n    element?: Element | null\n    writer?: any\n    componentDidMount() {\n        if (this.element) {\n            this.write()\n        }\n    }\n    componentDidUpdate() {\n        if (this.element) {\n            this.write();\n        }\n    }\n    write() {\n        const { children: word } = this.props;\n        this.writer = HanziWriter.create(this.element, word, {\n            width: 300,\n            height: 300,\n            padding: 30,\n            showOutline: true,\n\n            // strokeColor:\"#c43b3b\",\n            // radicalColor:\"#333333\"\n        });\n        this.writer.animateCharacter();\n    }\n    render() {\n        const { visible, children, ...props } = this.props;\n        if (!visible || !children) { return null }\n        return <Modal\n            visible\n            style={{\n                height: \"400px\"\n            }}\n            {...props}\n        >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                ref={(el) => {\n                    this.element = el;\n                }}\n                style={{\n                    marginTop: \"50\",\n                    border: \"1px solid #999999\"\n                }}\n                width=\"300\"\n                height=\"300\"\n                id=\"grid-background-target\">\n                <line x1=\"0\" y1=\"0\" x2=\"300\" y2=\"300\" strokeDasharray=\"5 3\" stroke=\"#DDD\" />\n                <line x1=\"300\" y1=\"0\" x2=\"0\" y2=\"300\" strokeDasharray=\"5 3\" stroke=\"#DDD\" />\n                <line x1=\"150\" y1=\"0\" x2=\"150\" y2=\"300\" strokeDasharray=\"5 3\" stroke=\"#DDD\" />\n                <line x1=\"0\" y1=\"150\" x2=\"300\" y2=\"150\" strokeDasharray=\"5 3\" stroke=\"#DDD\" />\n            </svg>\n            <div style={{\n                color: \"#999999999\",\n                whiteSpace: \"pre-line\"\n            }}>\n                {`\n                笔画顺序为楷体简体\n                版权信息@https://hanziwriter.org\n                `}\n            </div>\n        </Modal>\n    }\n}","import React from 'react';\nimport HanziWriter from '../hanzi-writer';\n\nexport default class Copybook extends React.Component<{ size: number, font: string, type: string, children: string }> {\n    state = {\n        visible: false\n    }\n    render() {\n        const { size, type, font: fontFamily, children } = this.props\n        const { visible } = this.state;\n        return <div\n\n        >\n            <svg\n                onClick={() => {\n                    this.setState({ visible: true })\n                }}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                style={{\n                    margin: 2,\n                    border: \"1px solid #999999\"\n                }}\n                width={size}\n                height={size}\n                id=\"grid-background-target\">\n                <g id=\"matts\">\n                    {type === \"mi\" ? <React.Fragment>\n                        <line x1=\"0\" y1=\"0\" x2={size} y2={size} strokeDasharray={`${size / 60} ${size / 100}`} stroke=\"#DDD\" />\n                        <line x1={size} y1=\"0\" x2=\"0\" y2={size} strokeDasharray={`${size / 60} ${size / 100}`} stroke=\"#DDD\" />\n                    </React.Fragment> : null}\n                    <line x1={size / 2} y1=\"0\" x2={size / 2} y2={size} strokeDasharray={`${size / 60} ${size / 100}`} stroke=\"#DDD\" />\n                    <line x1=\"0\" y1={size / 2} x2={size} y2={size / 2} strokeDasharray={`${size / 60} ${size / 100}`} stroke=\"#DDD\" />\n                </g>\n                <text\n                    x={size * 0.5}\n                    y={size * 0.5 * 1.22}\n                    style={{\n                        dominantBaseline: \"middle\",\n                        textAnchor: \"middle\"\n                    }}\n                    fontSize={size * 0.75} fontFamily={fontFamily}>{children}</text>\n            </svg>\n            <HanziWriter\n                visible={visible}\n                onClose={() => {\n                    this.setState({ visible: false })\n                }}\n            >{children}</HanziWriter>\n        </div>\n    }\n}\n","import React, { useState } from 'react';\nimport { Modal,Button } from 'antd-mobile';\n// import html2canvas from 'html2canvas';\n// import {saveAsPNG} from 'canvas2image';\nimport './index.css';\nexport default (props) => {\n    const [visible, setVisible] = useState(false)\n    // const [canvas,updateCanvas] = useState(null);\n    return <div>\n        <Button\n            onClick={async () => {\n                props.onPrint()\n                await new Promise(resolve => setTimeout(resolve, 100))\n                window.print();\n                // saveAsPNG\n                window._czc && window._czc.push([\"_trackEvent\", \"help\", \"click\", '打印', 1, 'print_btn']);\n                // await new Promise(resolve => setTimeout(resolve, 100))\n                // const _canvas = await html2canvas(document.getElementById(\"copybook-page\"), {\n                //     width: 1240,\n                //     height: 1757\n                // })\n                // // updateCanvas(_canvas);\n                // setVisible(true)\n                // document.getElementById(\"preview-page\").append(_canvas);\n            }}\n        >打印</Button>\n        {/* <i\n            className=\"iconfont icon-print\"\n            onClick={() => {\n                window._czc && window._czc.push([\"_trackEvent\", \"help\", \"click\", '打印', 1, 'print_btn']);\n                window.print();\n                setVisible(true)\n            }}\n        /> */}\n        <Modal\n            visible={visible}\n            onClose={() => {\n                setVisible(false)\n                props.onCancel();\n            }}\n            style={{\n                // height: \"600px\"\n            }}\n        > <div id=\"preview-page\"\n            onClick={() => {\n                setVisible(false)\n                props.onCancel();\n            }}\n        ></div>\n        </Modal>\n    </div>\n}","import React, { useState } from 'react';\nimport { NavBar, TextareaItem, } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\nimport '.'\nimport './index.scss';\nimport Matts from '../../components/matts';\nimport Print from '../../components/print/index';\ndeclare var window: any;\nwindow._czc = window._czc || [];\nfunction App() {\n  const [str, setWords] = useState(window.localStorage.getItem(\"current.words\") || \"\");\n  const size = parseInt(window.localStorage.getItem(\"setting.size\"), 10) || 160\n  const type = window.localStorage.getItem(\"setting.type\") || \"tian\";\n  const font = window.localStorage.getItem(\"setting.font-family\") || \"FZKTJW\";\n  // const words = str.split(\"\");\n  const printWords = str.split(\"\\n\").map((item: string) => {\n    const lent = item.length % 12;\n     \n    if (lent === 0 && item) {\n      return item;\n    }\n    const ret = item + \"                    \".slice(1, 12 - lent+1);\n    console.log(ret,item.length,16-lent,ret.length)\n    return ret;\n  }).join(\"\").split(\"\");\n  \n  const words =printWords;\n  const [isPrint, setIsPrint] = useState(false);\n  return (\n    <div>\n      {isPrint ?\n        <div className=\"copybook-print\">\n          <div className=\"copybook-page-box\" >\n            {printWords.map((word: string, i: number) => <Matts type={type} font={font} size={55} key={i}>{word}</Matts>)}\n          </div>\n        </div>\n        : null}\n\n      <div className=\"App\">\n\n        <div style={{ marginTop: 45 }}>\n          <TextareaItem\n            style={{\n              border: \"1px dotted #CCC\",\n              padding: 5,\n              fontFamily: font,\n              maxHeight: 300,\n            }}\n            placeholder=\"在这里输入要生成字体的文字\"\n            defaultValue={str}\n            onChange={setWords}\n            onBlur={(v) => {\n              window.localStorage.setItem(\"current.words\", v);\n              setWords(v)\n            }}\n            autoHeight\n          />\n          <div className={\"copybook-page\"} id=\"copybook-page\">\n            <div className=\"copybook-page-box\" >\n              {words.map((word: string, i: number) => <Matts type={type} font={font} size={size} key={i}>{word}</Matts>)}\n            </div>\n          </div>\n          <div style={{\n            color: \"#999\",\n            margin: \"10px\",\n            marginBottom: 40\n          }}>\n            字体版权： 方正字体库(https://www.foundertype.com/)\n      </div>\n        </div>\n\n        <NavBar\n          style={{\n            position: \"fixed\",\n            top: 0,\n            width: \"100%\"\n          }}\n          rightContent={<Print onPrint={() => setIsPrint(true)} onCancel={() => setIsPrint(false)} />}\n        >汉字字帖</NavBar>\n      </div >\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\n// import logo from './logo.svg';\nimport { Picker, Stepper, Button, SegmentedControl, WhiteSpace, WingBlank, NavBar } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\n\nimport fontList from './font-list';\n// import './App.css';\nimport './index.css';\n\nwindow._czc = window._czc || [];\nlet sizeTimer;\nexport default () => {\n  const [size, setSize] = useState(parseInt(window.localStorage.getItem(\"setting.size\"), 10) || 60);\n  const [type, setType] = useState(window.localStorage.getItem(\"setting.type\") || \"tian\");\n  const [font, setFont] = useState(window.localStorage.getItem(\"setting.font-family\") || \"FZKTJW\");\n  const fonts = fontList.map(({ label, value }) => ({\n    label:label,\n    labelText: label,\n    value\n  }))\n  return (\n    <div className=\"App\">\n      <NavBar >设置</NavBar>\n      <div>\n        <WhiteSpace />\n        <WingBlank>\n          <Stepper\n            showNumber\n            max={window.visualViewport ?\n              Math.floor((window.visualViewport.width - (40 * 2)) / 10) * 10\n              : 300}\n            min={40}\n            value={size}\n            step={10}\n            onChange={(v) => {\n              window.localStorage.setItem(\"setting.size\", v);\n              clearTimeout(sizeTimer);\n              sizeTimer = setTimeout(() => {\n                window._czc && window._czc.push([\"_trackEvent\", \"setting\", \"size\", '字体大小', v, 'stepper']);\n              }, 3000)\n              setSize(v)\n            }}\n          />\n        </WingBlank>\n        <WhiteSpace />\n        <WingBlank>\n          <SegmentedControl\n            values={([\"田字格\", \"米字格\"])}\n            selectedIndex={type === 'mi' ? 1 : 0}\n            onChange={(e) => {\n              const { selectedSegmentIndex: v, value: label } = e.nativeEvent;\n              const type = v === 1 ? \"mi\" : \"tian\";\n              setType(type)\n              window.localStorage.setItem(\"setting.type\", type)\n              window._czc && window._czc.push([\"_trackEvent\", \"setting\", \"type\", label, 1, 'bt_' + type]);\n            }}\n          />\n        </WingBlank>\n        <WhiteSpace />\n        <WingBlank>\n          <Picker\n            data={fonts}\n            value={[font]}\n            cols={1}\n            onOk={v => {\n              const value = v[0];\n              window.localStorage.setItem(\"setting.font-family\",value) \n              const label = fonts.filter(({ value }) => value === v[0]).map(({ labelText }) => labelText)[0]\n              window._czc && window._czc.push([\"_trackEvent\", \"setting\", \"font\", label, 1, 'font_select']);\n              setFont(value)\n            }}\n          >\n            <Button style={{\n              fontFamily: font\n            }}>\n              选择字体-{fonts.filter(({ value }) => value === font).map(({ label }) => label)}</Button>\n          </Picker>\n        </WingBlank>\n      </div>\n    </div >\n  );\n} ","// 字体来源：https://www.foundertype.com/\nexport default [{\n    label: \"方正楷体简体\",\n    value: \"FZKTJW\",\n    offset: { x: 1, y: 1.09 }\n// }, {\n//     label: \"方正新楷体简体\",\n//     value: \"FZXKTJW\"\n    // }, {\n    //   label: \"田英章楷书\",\n    //   value: \"TYZKSJW\"\n    // }, {\n    //   label: \"方正硬笔楷书简体\",\n    //   value: \"FZYBKSJW\",\n    // }, {\n    //   label: \"庞中华钢笔字体\",\n    //   value: \"PZHGBZTJW\",\n// }, {\n//     label: \"方正字迹-仿颜简体\t\",\n//     value: \"FZZJ-FYJW\"\n// }, {\n//     label: \"书体坊王羲之楷\",\n//     value: \"STFWXZKJW\"\n},\n    // {\n    //   label: \"方正手迹-丁谦硬笔楷书\",\n    //   value: \"FZSJ-DQYBKSJW\"\n    // }\n]","import React from 'react';\nimport './index.css';\ntype IconType = \"scan\" | \"zhong-o\" | \"zhong\" | \"setting\"\ninterface IconProps {\n    type: IconType\n    size?: \"middle\" | \"large\" | \"small\"\n    className?: string\n}\nexport default (\n    { size = \"middle\", type, className = \"\" }: IconProps\n) => (<i\n    className={`iconfont icon-${type} icon-${size}${className ? \" \" + className : \"\"} `}\n/>);\n","import React from 'react';\nimport { TabBar, } from 'antd-mobile';\nimport Icon from '../components/icons/index';\ninterface LayoutProps {\n  children: any;\n  history: any;\n  location: any;\n}\nexport default ({ children, history, location, ...props }: LayoutProps) => {\n  const pathname = location.pathname\n  // const history = useHistory();\n  return (\n    <div>\n\n      <div\n        // style={{ position: 'fixed', height: 'calc(100% - 45px)', width: '100%', top: 45 }}\n        style={{ position: 'fixed', height: '100%', width: '100%', top: 0 }}\n      >\n        <TabBar\n          unselectedTintColor='#949494'\n          tintColor='#33A3F4'\n          barTintColor='white'\n        >\n          <TabBar.Item\n            title='计划'\n            key='inspect'\n            icon={<Icon size=\"large\" type=\"scan\" />}\n            selectedIcon={<Icon size=\"large\" type=\"scan\" />}\n            selected={pathname.indexOf(\"task\") === 1}\n            onPress={() => {\n              history.push(\"/task-clock\")\n            }}>\n            {pathname.indexOf(\"task\") === 1 ? children : null}\n          </TabBar.Item>\n          <TabBar.Item\n            title='字帖'\n            key='hanzi'\n            icon={<Icon size=\"large\" type=\"zhong-o\" />}\n            selectedIcon={<Icon size=\"large\" type=\"zhong\" />}\n            selected={pathname === \"/\" || pathname === '/hanzi'}\n            onPress={() => {\n              history.push(\"/hanzi\")\n              // browserHistory.push('/questions')\n            }}\n          >\n            {pathname === '/hanzi' ? children : null}\n          </TabBar.Item>\n          <TabBar.Item\n            title='设置'\n            key='setting'\n            icon={<Icon size=\"large\" type=\"setting\" />}\n            selectedIcon={<Icon size=\"large\" type=\"setting\" />}\n            selected={pathname === '/setting'}\n            onPress={() => {\n              history.push(\"/setting\")\n            }}\n          >\n            {pathname === '/setting' ? children : null}\n          </TabBar.Item>\n        </TabBar>\n      </div >\n    </div>\n\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { NavBar, InputItem } from 'antd-mobile';\n\nexport default () => {\n    let canvasElement: HTMLCanvasElement | null;\n    let videoElement: HTMLVideoElement | null;\n\n    if (!navigator.mediaDevices) {\n        return <div>\n            请使用Chrome 等浏览器获取更好的体验效果\n        </div>\n    }\n    const [word, setWord] = useState(\"我\");\n    const videoPort = 375;\n    const [size] = useState(200);\n    const fontFamily = localStorage.getItem(\"setting.font-family\");\n    useEffect(() => {\n        let videoInput: MediaStream | null;\n        if (videoElement) {\n            navigator.mediaDevices.enumerateDevices()\n                .then(devices => devices.filter(({ kind }) => kind === \"videoinput\")[0])\n                .then(({ deviceId }) => {\n                    return navigator.mediaDevices.getUserMedia({\n                        audio: false,\n                        video: {\n                            deviceId,\n                            width: 500,\n                            height: 500\n                        }\n                    })\n                }).then(stream => {\n                    videoInput = stream\n                    if (videoElement && canvasElement) {\n                        videoElement.srcObject = stream;\n                        const ctx = canvasElement.getContext(\"2d\");\n                        if (ctx) {\n                            const drawFrame = () => {\n                                // if (videoElement) {\n                                ctx.clearRect(0, 0, videoPort, videoPort);\n                                //     ctx.drawImage(videoElement, 0, 0, videoPort, videoPort)\n                                // }\n                                const start = (videoPort - size) / 2;\n                                const center = videoPort / 2;\n                                const end = videoPort - start;\n                                ctx.fillStyle = \"rgba(40, 40, 40, 0.6)\";\n                                ctx.fillRect(0, 0, videoPort, videoPort);\n                                ctx.clearRect(start, start, size - 2, size - 2);\n                                ctx.strokeStyle = \"#666666\";\n                                ctx.strokeRect(start, start, size - 2, size - 2);\n\n                                ctx.strokeStyle = \"#666666\";\n                                ctx.setLineDash([size / 40, size / 40])\n                                // ctx.strokeRect(size / 4, size / 4, size / 2, size / 2);\n                                // 横中线\n                                ctx.moveTo(center, start);\n                                ctx.lineTo(center, end);\n                                // 竖中线 \n                                ctx.moveTo(start, center);\n                                ctx.lineTo(end, center);\n                                ctx.stroke();\n\n                                ctx.strokeStyle = \"#999999\";\n                                // ctx.setLineDash([size / 40, size / 40])\n                                // 右斜线\n                                ctx.moveTo(start, start);\n                                ctx.lineTo(end, end);\n                                // 左斜线\n                                ctx.moveTo(start, end);\n                                ctx.lineTo(end, start);\n                                ctx.stroke();\n\n                                ctx.setLineDash([0, 0]);\n                                ctx.textAlign = \"center\"\n                                ctx.textBaseline = \"middle\"\n                                // ctx.fillStyle = \"text-shadow: 1px 1px #000,-1px -1px #000, 1px -1px #000, -1px 1px #000; \"\n                                ctx.font = size * 0.7 + \"px \" + fontFamily;\n                                ctx.strokeStyle = \"red\";\n                                ctx.strokeText(word, videoPort / 2, videoPort / 2 * 1.09);\n                                requestAnimationFrame(drawFrame);\n                            }\n                            drawFrame();\n                        }\n                    }\n                });\n        }\n        return () => {\n            if (videoInput) {\n                videoInput.getVideoTracks()[0].stop();\n            }\n        }\n    })\n    return (<div>\n        <NavBar>实用性功能，有问题请微信群反馈</NavBar>\n        <InputItem\n            defaultValue={word}\n            onChange={(value) => setWord(value ? value[0] : \"\")}\n        />\n        <div\n            style={{ position: \"relative\" }}\n        >\n            <video\n                autoPlay={true}\n                style={{\n                    // display: \"none\",\n                    width: \"100%\"\n                }}\n                ref={(video) => {\n                    videoElement = video;\n                }} />\n            <canvas\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0\n                }}\n                id=\"myCanvas\" width={videoPort} height={videoPort}\n                ref={(canvas) => {\n                    canvasElement = canvas;\n                }} />\n\n        </div>\n\n    </div >)\n}","\ninterface ITask extends Task {\n    // id: string\n}\n\nexport default class TaskStorage {\n    constructor() {\n        this.db = new Promise((resolve, reject) => {\n            var request = window.indexedDB.open(\"study\");\n            request.onsuccess = (event: any) => {\n                const db = event.target.result;\n                resolve(db)\n            }\n            request.onupgradeneeded = (event: any) => {\n                const db = event.target.result;\n                const objectStore: IDBObjectStore = db.createObjectStore('task-list', { keyPath: 'id', autoIncrement: true });\n                objectStore.createIndex('name', 'name', { unique: false });\n                objectStore.createIndex('startDate', 'startDate', { unique: false });\n                objectStore.createIndex('endDate', 'endDate', { unique: false });\n                resolve(db)\n            }\n            request.onerror = (event) => {\n                reject(event)\n            }\n        })\n    }\n    private db: Promise<IDBDatabase>\n    private get store() {\n        return this.db.then(db => db.transaction([\"task-list\"], \"readwrite\").objectStore(\"task-list\"))\n    }\n    async load(): Promise<ITask[]> {\n        const store = await this.store;\n        const request = store.getAll() as IDBRequest<ITask[]>\n        return await new Promise((resolve, reject) => {\n            request.onsuccess = () => resolve(request.result)\n            request.onerror = reject\n        })\n    }\n    async add(task: Partial<ITask>) {\n        const store = await this.store;\n        const request = store.add(task)\n        return await new Promise((resolve, reject) => {\n            request.onsuccess = (e) => {\n                resolve(true)\n            }\n            request.onerror = (e) => {\n                console.log(e);\n                reject(e)\n\n            }\n        })\n    }\n    async update(task: ITask) {\n        const store = await this.store;\n        const request = store.put(task);\n        return await new Promise((resolve, reject) => {\n            request.onsuccess = (e) => {\n                resolve(request.result)\n            }\n            request.onerror = reject\n        })\n    }\n    async remove(id: string) {\n        const store = await this.store;\n        store.delete(id)\n    }\n    async query({ startDate, endDate = startDate }: { startDate: number, endDate?: number }): Promise<ITask[]> {\n        const store = await this.store;\n        const request = store.getAll() as IDBRequest<ITask[]>\n        return await new Promise((resolve, reject) => {\n            request.onsuccess = (e) => {\n                resolve((request.result).filter((task) => {\n                    if (startDate >= task.startDate && endDate <= task.endDate) {\n                        return true\n                    }\n                    return false\n                }).sort((a, b) => {\n                    return a.startTime - b.startTime\n                }))\n            }\n            request.onerror = reject\n        })\n    }\n}","import TaskStorage from \"./storage\";\nimport dayjs from \"dayjs\";\n\nconst task = new TaskStorage()\nexport const load = () => {\n    return task.load()\n}\nexport const queryByDate=(date:number=parseInt(dayjs(new Date()).format(\"YYYYMMDD\")))=>{\n    return task.query({startDate:date,endDate:date})\n}\nexport const save = (data: Task) => {\n    if(data.id){\n        return task.update(data);\n    }\n    return task.add(data)\n}\nexport const remove=(id: string) => {\n    return task.remove(id);\n}","import dayjs from \"dayjs\";\n\nexport const timeFormat = (time: number = 9 * 60) => {\n    return [Math.floor(time as number / 60), (time as number) % 60].map(val => val < 10 ? (\"0\" + val) : val).join(\":\");\n}\nexport const buildDateTime = (date: number, time: number) => {\n    const ret = dayjs(date).toDate();\n    ret.setMinutes(time);\n    return ret;\n}\nexport const str2color = (\n    str: string,\n    scope: {\n        from?: number;\n        to?: number;\n    } = {},\n): string => {\n    const { from = 0x333333, to = 0xcccccc } = { from: 0x333333, to: 0xcccccc, ...scope };\n    const str2code = str.replace(/[^\\d]/g, $1 => $1.charCodeAt(0).toString());\n    const mod = parseFloat(str2code) % to;\n    const value = mod < from ? mod + from : mod;\n    const rgbValue = `000000${value.toString(16)}`.match(/\\0*([\\dA-Fa-f]{6,6})$/);\n    // .match(/\\0*([\\dA-Fa-f]{6,6})$/)[0]\n    return `#${rgbValue ? rgbValue[0] : value.toString(16)}`;\n};\n","import React from 'react';\nimport { List } from 'antd-mobile';\nimport { timeFormat } from '../../../task-list/uitls';\n\n\ninterface IProps {\n    data: Array<Task & { color: string }>\n}\n\nconst TaskList: React.FC<IProps> = (props) => {\n    const { data } = props\n    return <List>\n        {data.map(task => {\n            return <List.Item key={task.id}>\n                {task.name}\n                <List.Item.Brief>\n                    {timeFormat(task.startTime)} - {timeFormat(task.endTime)}\n                </List.Item.Brief>\n            </List.Item>\n        })}\n    </List>\n}\nexport default TaskList;","\ninterface IdrawCalibrationProps {\n    radius: number\n    parts: 12 | 24 | 60 | 120\n    size: [number, number, number?]\n    textOffset?: number\n}\nconst getRadian = (parts: number, count: number,) => -(2 * Math.PI / 360) * ((360 / parts * count + 180) % 360)\n\nconst drawClockCalibration = (ctx: CanvasRenderingContext2D, props: IdrawCalibrationProps) => {\n    const { radius, parts, size: [inner, outer, size = 1], textOffset } = props\n    // 绘制时刻度\n    let x: number;\n    let y: number;\n    ctx.beginPath();\n    for (let i = 0; i < parts; i++) {\n        const radian = getRadian(parts, i)\n        x = Math.sin(radian) * (radius + inner);\n        y = Math.cos(radian) * (radius + inner);\n        ctx.moveTo(Math.floor(x), Math.floor(y))\n        x = Math.sin(radian) * (radius + outer);\n        y = Math.cos(radian) * (radius + outer);\n        ctx.lineTo(Math.floor(x), Math.floor(y))\n        if (size) {\n            ctx.lineWidth = size\n        }\n        if (textOffset) {\n            x = Math.sin(radian) * (radius + outer + textOffset);\n            y = Math.cos(radian) * (radius + outer + textOffset);\n            if (parts === 60) {\n                if (i % 5 === 0) {\n                    ctx.fillText((i || parts).toString(), Math.floor(x), Math.floor(y))\n                }\n            } else {\n                ctx.fillText((i || parts).toString(), Math.floor(x), Math.floor(y))\n            }\n        }\n    }\n    ctx.stroke();\n}\nexport const drawClockBlank = (ctx: CanvasRenderingContext2D, props: { radius: number }) => {\n    drawClockCalibration(ctx, {\n        radius: props.radius,\n        parts: 24,\n        size: [-18, -12, 3],\n        textOffset: -20\n    })\n    drawClockCalibration(ctx, {\n        radius: props.radius,\n        parts: 60,\n        size: [-4, 0],\n        textOffset: 20\n    })\n}\ninterface IdrawClockOnePointerProps {\n    radius: number\n    parts: number\n    postion: number\n    offset?: {\n        start?: number\n        end?: number\n    }\n    lineWidth?: number\n}\nconst drawClockOnePointer = (ctx: CanvasRenderingContext2D, props: IdrawClockOnePointerProps) => {\n\n    const { radius, parts, postion, offset = {}, lineWidth = 1 } = props\n    const { start = 0, end = 0 } = offset\n    let x, y;\n    ctx.beginPath();\n    const radian = getRadian(parts, postion)\n    x = Math.sin(radian) * (radius + start);\n    y = Math.cos(radian) * (radius + start);\n    ctx.moveTo(Math.floor(x), Math.floor(y))\n    x = Math.sin(radian) * (radius + end);\n    y = Math.cos(radian) * (radius + end);\n    ctx.lineTo(Math.floor(x), Math.floor(y))\n    ctx.lineWidth = lineWidth\n    ctx.stroke()\n}\nexport const drawSector = (ctx: CanvasRenderingContext2D, props: {\n    radius: number\n    start: number\n    end: number,\n    imgUrl?: string,\n    color?: string,\n    label?: string\n}) => {\n    const { radius } = props\n    ctx.beginPath()\n    ctx.fillStyle = \"\"\n\n    if (props.color) {\n        ctx.fillStyle = props.color\n    }\n\n\n    ctx.scale(1, 1)\n    ctx.moveTo(0, 0);\n    const start = (props.start ? Math.PI * 2 / props.start : 0) - (Math.PI * 2 / 360 * 90)\n    const end = (props.end ? Math.PI * 2 / props.end : 0) - Math.PI * 2 / 360 * 90\n    ctx.arc(0, 0, radius, start, end, false)\n    ctx.closePath();\n    ctx.fill()\n\n    if (props.imgUrl) {\n        var img = document.getElementById(props.imgUrl) as HTMLImageElement;\n        if (!img) {\n            img = document.createElement(\"img\");\n            img.src = props.imgUrl\n            img.id = props.imgUrl || \"\";\n            (document.getElementById(\"img-container\") as HTMLElement).appendChild(img);\n        }\n        // ctx.drawImage(img, 0, 0, 50, 50)\n    }\n}\ninterface ITask {\n    label: string,\n    start: number,\n    end: number\n    color?: string\n    imgUrl?: string\n}\nexport const drawClockPointer = (ctx: CanvasRenderingContext2D, props: {\n    radius: number,\n    taskList: any[]\n}) => {\n    const { radius } = props;\n    const taskList: ITask[] = props.taskList.map((item: any) => {\n        const startTime = item.start;\n        const endTime = item.end\n        return {\n            color: item.color,\n            label: item.name,\n            imgUrl: item.imgUrl,\n            start: 24 / (startTime.getHours() + startTime.getMinutes() / 60),\n            end: 24 / (endTime.getHours() + endTime.getMinutes() / 60)\n        }\n    })\n    taskList.forEach(item => {\n        // ctx.fillStyle = \"#000000\"\n        drawSector(ctx, {\n            radius: radius * 0.7,\n            start: item.start,\n            end: item.end,\n            imgUrl: item.imgUrl,\n            color: item.color\n        })\n    })\n    //绘制表芯\n    ctx.beginPath();\n    ctx.arc(0, 0, 5, 0, 2 * Math.PI)\n    // ctx.fillStyle = \"red\"\n    ctx.closePath();\n    ctx.fill()\n    //时针\n    const now = new Date();\n    const seconds = now.getSeconds() //+ now.getTime() % 1000 / 1000\n    const minutes = now.getMinutes() + seconds / 60\n    const hours = now.getHours() + minutes / 60;\n    drawClockOnePointer(ctx, {\n        radius,\n        parts: 24,\n        postion: hours,\n        offset: {\n            start: -radius * 1.03,\n            end: -radius * 0.4\n        },\n        lineWidth: 2\n    })\n    // drawSector(ctx, {\n    //     radius:radius*0.6, \n    //     start: 0, \n    //     end: (12 / (hours%12))\n    // })\n    drawClockOnePointer(ctx, {\n        radius,\n        parts: 60,\n        postion: minutes,\n        offset: {\n            start: -radius * 1.05,\n            end: -radius * 0.2\n        },\n        lineWidth: 1\n    })\n    drawClockOnePointer(ctx, {\n        radius,\n        parts: 60,\n        postion: seconds,\n        offset: {\n            start: -radius * 1.1,\n            end: radius * .1\n        },\n        lineWidth: 0.2\n    })\n\n\n}","import React, { useEffect } from 'react';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\nimport '.'\nimport './index.scss';\nimport { drawClockBlank, drawClockPointer } from './utils';\ndeclare var window: any;\ninterface IProps {\n  data: Clock.Task[]\n}\nconst Clock: React.FC<IProps> = (props) => {\n  const { data } = props\n  useEffect(() => {\n    const canvas: HTMLCanvasElement = document.querySelector(\".clock-canvas\") || document.createElement(\"canvas\")\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = Math.min(window.innerWidth, window.innerHeight)-20\n    canvas.height = Math.min(window.innerWidth, window.innerHeight)-20\n    let requestID: number;\n    if (ctx) {\n      const w = ctx.canvas.width;\n      const h = ctx.canvas.height;\n      const zX = w / 2;\n      const zY = h / 2;\n      ctx.translate(zX, zY);\n      const LayerBack = document.createElement(\"canvas\");\n      LayerBack.width = w;\n      LayerBack.height = h;\n      const ctxLayerBack = LayerBack.getContext(\"2d\");\n      const radius = Math.min(w, h) / 2 * .9 - 20;\n      if (ctxLayerBack) {\n        ctxLayerBack.translate(zX, zY)\n        drawClockBlank(ctxLayerBack, { radius });\n      }\n\n      const LayerPointer = document.createElement(\"canvas\");\n      LayerPointer.width = w;\n      LayerPointer.height = h;\n      const ctxLayerPointer = LayerPointer.getContext(\"2d\");\n      if (ctxLayerPointer) {\n        ctxLayerPointer.translate(zX, zY)\n      }\n      const drawShand = () => {\n        if (ctx) {\n          ctx.clearRect(-zX, -zY, 2 * zX, 2 * zY);\n          if (ctxLayerPointer) {\n            ctxLayerPointer.clearRect(-zX, -zY, 2 * zX, 2 * zY);\n            drawClockPointer(ctxLayerPointer, {\n              radius,\n              taskList:data\n            });\n          }\n          ctx.globalCompositeOperation = \"destination-over\"\n          ctx.drawImage(LayerPointer, -zX, -zY)\n          ctx.drawImage(LayerBack, -zX, -zY)\n        }\n        requestID = requestAnimationFrame(drawShand)\n      }\n      drawShand()\n    }\n    return () => {\n      cancelAnimationFrame(requestID)\n      // clearImmediate(rafHandler)\n    }\n  }, [data])\n  return (\n    <div>\n      <div id=\"img-container\" style={{ display: \"none\" }}></div>\n      <canvas className='clock-canvas'>\n      </canvas>\n    </div>\n\n  );\n}\n\nexport default Clock;\n","import React, { useEffect, useState } from 'react';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\nimport '.'\nimport './index.scss';\nimport { NavBar, Popover, Icon } from 'antd-mobile';\nimport { RouteProps, useHistory } from 'react-router-dom';\nimport { queryByDate } from '../task-list/service';\nimport { buildDateTime, str2color } from '../task-list/uitls';\nimport TaskList from './components/list';\nimport Clock from './components/clock';\ndeclare var window: any;\nwindow._czc = window._czc || [];\nfunction App(props: RouteProps) {\n  // props.\n  const [clockTasks, updateClockTasks] = useState<Array<Clock.Task>>([])\n  const [taskList, updateTaskList] = useState<Array<Task & { color: string }>>([])\n  const history = useHistory();\n  useEffect(() => {\n    (async () => {\n      const tasks = await (await queryByDate()).map(item => ({\n        \"color\": str2color(item.name, { to: 0x999999 }),\n        ...item\n      }));\n      updateTaskList(tasks);\n      updateClockTasks(tasks.map(item => {\n        const task: Clock.Task = {\n          name: item.name,\n          \"color\": item.color,\n          \"imgUrl\": \"\",\n          \"start\": buildDateTime(item.startDate, item.startTime),\n          \"end\": buildDateTime(item.endDate, item.endTime),\n        }\n        return task\n      }));\n    })()\n  }, [])\n  return (\n    <div className=\"clock\">\n      <NavBar\n        rightContent={\n          <Popover\n            onSelect={({ props: { firstItem } }) => {\n              history.push(firstItem)\n            }}\n            overlay={[\n              <Popover.Item\n                key=\"task-list\"\n                firstItem=\"/task-list\"\n              >\n                计划管理\n              </Popover.Item>\n            ]}\n          >\n            <Icon type=\"ellipsis\" />\n          </Popover>\n        }\n      >今日计划</NavBar>\n      <Clock data={clockTasks} />\n      <TaskList data={taskList} />\n    </div >\n  );\n}\n\nexport default App;\n","\n// declare module  {\nexport enum Week {\n    Sunday,\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n}","import React from 'react';\nimport { List, Checkbox } from 'antd-mobile';\nimport { InputProps } from 'antd-mobile/lib/input-item/Input';\nconst list:Array<{value:Task.RepeatType,label:string}> = [\n    { value: \"none\", label: \"无\" },\n    { value: \"day\", label: \"每日\" },\n    { value: \"weekday\", label: \"工作日\" },\n    { value: \"weekend\", label: \"周末\" },\n    { value: \"other\", label: \"其他\" }\n]\nconst TaskRepeatTypeItem: React.FC<InputProps> = (props) => {\n    // const [value,updateValue] = \n    // console.log(props)\n    return (\n        <List.Item\n            onClick={(e)=> {\n                const target = e.target as HTMLInputElement\n                if (target.type === \"checkbox\") {\n                    target.value = target.name\n                    props.onChange && props.onChange(e as any)\n                }\n                // e.stopPropagation()\n                return false\n            }}\n        >\n            循环任务\n            <List.Item.Brief\n            >\n                {\n                    list.map(item => <Checkbox\n                        key={item.value}\n                        checked={item.value === props.value}\n                        name={item.value}\n                    >{item.label}</Checkbox>)\n                }\n            </List.Item.Brief>\n        </List.Item>\n\n    )\n}\nexport default TaskRepeatTypeItem\n","import React from 'react';\nimport { List, Checkbox } from 'antd-mobile';\n// import { Week } from './typing.d';\nimport { Week } from './typing.d'\nimport { InputProps } from 'antd-mobile/lib/input-item/Input';\nconst list: Array<{\n    value: Week,\n    label: string\n}> = [\n        { value: Week.Monday, label: \"周一\" },\n        { value: Week.Tuesday, label: \"周二\" },\n        { value: Week.Wednesday, label: \"周三\" },\n        { value: Week.Thursday, label: \"周四\" },\n        { value: Week.Friday, label: \"周五\" },\n        { value: Week.Saturday, label: \"周六\" },\n        { value: Week.Sunday, label: \"周日\" }\n    ]\nconst TaskRepeatDayItem: React.FC<InputProps & { repeatType: Task.RepeatType, value?: Week[], onChange?: any }> = (props) => {\n    const { value = [] } = props;\n    // console.log(value)\n    return (\n        <List.Item\n            onClick={(e: any) => {\n                const target = e.target as HTMLInputElement\n                if (target.type === \"checkbox\") {\n                    target.value = target.name\n                    if (props.repeatType === \"other\") {\n                        const { name, checked }: any = target\n                        const index = value.indexOf(name);\n                        let ret = [...value]\n                        if (checked && index === -1) {\n                            ret.push(name)\n                        }\n                        if (!checked && index > -1) {\n                            ret.splice(index, 1)\n                        }\n                        target.value = ret as any;\n                        props.onChange && props.onChange(ret)\n                    }\n                }\n            }}\n        >\n            <List.Item.Brief>\n                {\n                    list.map(item => <Checkbox\n                        key={item.value}\n                        checked={value.indexOf(item.value) > -1}\n                        name={item.value as any}\n                    >{item.label}</Checkbox>)\n                }\n            </List.Item.Brief>\n        </List.Item>\n\n    )\n}\nexport default TaskRepeatDayItem\n","import React from 'react';\nimport { List, Range } from 'antd-mobile';\n// import { Week } from './typing.d';\nimport { InputProps } from 'antd-mobile/lib/input-item/Input';\nimport { timeFormat } from '../../uitls';\nconst TaskTimeRangItem: React.FC<InputProps & { value: [number, number], onChange: (range: [number, number]) => void }> = (props) => {\n    const { value = [9 * 60, 10 * 60] } = props;\n    // console.log(value)\n    return (\n        <React.Fragment>\n            <List.Item\n                extra={\n                    <div>\n                        {timeFormat(value[0])} - {timeFormat(value[1])}\n                    </div>\n                }\n            >\n                时间段\n            </List.Item>\n\n            <List.Item>\n                <div style={{ padding: 20, paddingBottom: 40 }}>\n                    <Range\n                        min={6 * 60}\n                        max={21 * 60}\n                        step={5}\n                        defaultValue={value as any}\n                        {...{\n                            marks: {\n                                [60 * 6]: \"06:00\",\n                                [60 * 9]: \"09:00\",\n                                [60 * 12]: \"12:00\",\n                                [60 * 15]: \"15:00\",\n                                [60 * 18]: \"18:00\",\n                                [60 * 21]: \"21:00\",\n                            }\n                        }}\n                        onChange={(range:any) => props.onChange(range)}\n                    />\n                </div>\n            </List.Item>\n        </React.Fragment>\n\n    )\n}\nexport default TaskTimeRangItem\n","import React, { useState } from 'react';\nimport { List, Calendar } from 'antd-mobile';\nimport { CalendarProps } from 'antd-mobile/lib/calendar/PropsType';\nimport dayjs from 'dayjs';\nconst TaskDateRangItem: React.FC<CalendarProps & { value: [string, string], onChange: (range: [string, string]) => void }> = (props) => {\n    const { value, onChange } = props;\n    const [visibleCalendar, updateVisibleCalendar] = useState<boolean>(false)\n\n    return (\n        <React.Fragment>\n            <List.Item\n                arrow=\"horizontal\"\n                extra={\n                    <div>\n                        {dayjs(value[0]).format(\"YYYY-MM-DD\")}\n                        {value[1] && value[1] > value[0] ?\n                            <div>\n                                {dayjs(value[1]).format(\"YYYY-MM-DD\")}\n                            </div>\n                            : null}\n                    </div>\n                }\n                onClick={() => {\n                    updateVisibleCalendar(true)\n                }}\n            >\n                日期\n            </List.Item>\n            <Calendar\n                visible={visibleCalendar}\n                onCancel={() => {\n                    updateVisibleCalendar(false)\n                }}\n                onConfirm={(startDate, endDate) => {\n                    updateVisibleCalendar(false)\n                    onChange([dayjs(startDate).format(\"YYYYMMDD\"), dayjs(endDate).format(\"YYYYMMDD\")])\n                }}\n                showShortcut\n                type={\"range\"}\n                // defaultDate={new Date(value[0]) || new Date()}\n                defaultValue={[dayjs(value[0]).toDate(), dayjs(value[1]).toDate()] as any}\n            />\n        </React.Fragment>\n\n    )\n}\nexport default TaskDateRangItem\n","import TaskForm from './task-form';\nexport default TaskForm","import React from 'react';\nimport { Button, InputItem,  List, Toast } from 'antd-mobile';\nimport { createForm } from \"rc-form\";\nimport TaskRepeatTypeItem from './task-repeat-type-item';\nimport TaskRepeatDayItem from './task-repeat-day-item';\nimport { Week } from './typing.d'\nimport TaskTimeRangItem from './task-time-rang-item';\nimport TaskDateRangItem from './task-date-rang-item';\n\ninterface ISource extends Task<Week> { }\ninterface IProps {\n    task: ISource\n    onSubmit: (data: ISource) => void\n    onCancel: () => void\n}\nconst TaskForm: RCForm.FC<IProps, ISource> = (props) => {\n    const { form, task } = props;\n    const { getFieldProps, getFieldsValue, getFieldError,  setFieldsValue, validateFields } = form\n\n    getFieldProps(\"startTime\", { initialValue: task.startTime })\n    getFieldProps(\"endTime\", { initialValue: task.endTime })\n    getFieldProps(\"startDate\", {\n        initialValue: task.startDate\n    })\n    getFieldProps(\"endDate\", {\n        initialValue: task.endDate\n    })\n    const values = getFieldsValue([\"name\", \"repeatType\", \"repeatDays\", \"startDate\", \"endDate\", \"startTime\", \"endTime\"]);\n    return (\n        <div\n            style={{\n                minHeight: 500,\n                backgroundColor: \"#FFF\",\n                marginBottom: 30,\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\"\n            }}>\n            <List\n                style={{\n                    // minHeight: 500,\n                    // backgroundColor: \"#FFF\"\n                }}>\n                <InputItem\n                    placeholder=\"输入任务名称\"\n                    {\n                    ...getFieldProps(\"name\", {\n                        initialValue: task.name,\n                        rules: [{\n                            required: true\n                        }]\n                    })\n                    }\n                    error={!!getFieldError(\"name\")}\n                    onErrorClick={() => {\n                        Toast.info(getFieldError(\"name\"))\n                    }}\n                >任务名称</InputItem>\n                <TaskRepeatTypeItem\n                    {\n                    ...getFieldProps(\"repeatType\", {\n                        initialValue: task.repeatType,\n                        getValueFromEvent(e) {\n                            return (e.target as any).name\n                        },\n                        onChange(e) {\n                            const value: Task.RepeatType = (e.target as any).name;\n                            let days: Week[];\n                            switch (value) {\n                                case \"day\":\n                                    days = [Week.Monday, Week.Tuesday, Week.Wednesday, Week.Thursday, Week.Friday, Week.Saturday, Week.Sunday]\n                                    break;\n                                case \"weekday\":\n                                    days = [Week.Monday, Week.Tuesday, Week.Wednesday, Week.Thursday, Week.Friday]\n                                    break;\n                                case \"weekend\":\n                                    days = [Week.Thursday, Week.Friday]\n                                    break;\n                                default:\n                                    days = []\n                            }\n                            setFieldsValue({\n                                repeatDays: days\n                            })\n                        }\n                    })\n                    }\n                />\n                <TaskRepeatDayItem\n                    repeatType={values.repeatType || task.repeatType}\n                    {\n                    ...getFieldProps(\"repeatDays\", {\n                        initialValue: task.repeatDays,\n                    })\n                    }\n                />\n                <TaskDateRangItem\n                    value={[values.startDate, values.endDate] as any}\n                    onChange={(range: any) => {\n                        setFieldsValue({\n                            startDate: range[0],\n                            endDate: range[1]\n                        })\n                    }}\n                />\n                <TaskTimeRangItem\n                    value={[values.startTime || task.startTime, values.endTime || task.endTime] as any}\n                    onChange={(range: any) => {\n                        setFieldsValue({\n                            startTime: range[0],\n                            endTime: range[1]\n                        })\n                    }}\n                />\n\n\n            </List>\n\n            <Button\n                style={{\n                    margin: 20\n                }}\n                type=\"primary\"\n                onClick={() => {\n                    // props.onCancel()\n                    validateFields((error, values) => {\n                        // console.log(res)\n                        if (!error) {\n                            console.log({ ...task, ...values })\n                            props.onSubmit({ ...task, ...values })\n                        }\n                    })\n                    // form.s\n                }}\n            >保存</Button>\n        </div>\n    )\n}\n\nexport default createForm()<IProps>(TaskForm)\n","import React, { useState, useEffect } from 'react';\n// import { Button } from 'antd-mobile';\nimport TaskForm from './components//task-form';\nimport { Drawer, Button, List, NavBar, Icon, SwipeAction, Tag } from 'antd-mobile';\nimport dayjs from 'dayjs';\nimport * as service from './service';\nimport { useHistory } from 'react-router-dom';\nimport { timeFormat } from './uitls';\n\nconst newTask: any = {\n  name: \"\",\n  repeatDays: [],\n  repeatType: \"none\",\n  startTime: 9 * 60,\n  endTime: 10 * 60,\n  startDate: dayjs(new Date()).format(\"YYYYMMDD\"),\n  endDate: dayjs(new Date()).format(\"YYYYMMDD\"),\n}\nconst TaskList: React.FC<any> = (props) => {\n  const history = useHistory()\n  const [visible, updateVisible] = useState<boolean>(false);\n  const [list, updateList] = useState<Task[]>([]);\n  const [count, updateCount] = useState<number>(0);\n  const [editTask, updateEditTask] = useState<Task>(newTask)\n  useEffect(() => {\n    service.load().then(res => {\n      updateList(res)\n    })\n  }, [count, visible])\n  return <div>\n    <Drawer\n      open={visible}\n      position=\"bottom\"\n      // docked={true}\n      // enableDragHandle\n      onOpenChange={() => updateVisible(!visible)}\n      sidebar={\n        visible ?\n          <TaskForm\n            task={editTask}\n            onSubmit={(data) => {\n              service.save(data)\n              updateVisible(false)\n            }}\n            onCancel={() => updateVisible(false)}\n          /> : null}\n    >\n      <NavBar\n        leftContent={<Icon type=\"left\"\n          onClick={() => {\n            history.goBack()\n          }}\n        />}\n      >计划管理</NavBar>\n      <div>\n        <Button onClick={() => {\n          updateEditTask(newTask);\n          updateVisible(true)\n        }}>添加计划</Button>\n        <List>\n          {list.map(task =>\n            <SwipeAction\n              key={task.id}\n              right={[\n                {\n                  text: \"修改\",\n                  onPress() {\n                    updateEditTask(task);\n                    updateVisible(true);\n                  },\n                  style: {\n                    color: \"#FFF\",\n                    fontWeight: \"bolder\",\n                    padding: \"10px 20px\",\n                    backgroundColor: \"#108ee9\"\n                  }\n                }, {\n                  text: \"删除\",\n                  onPress() {\n                    service.remove(task.id)\n                    updateCount(count + 1)\n                  },\n                  style: {\n                    color: \"#FFF\",\n                    fontWeight: \"bolder\",\n                    padding: \"10px 20px\",\n                    backgroundColor: \"red\"\n                  }\n                }\n              ]}\n            >\n              <List.Item\n                multipleLine\n                align=\"top\"\n              >\n                {task.name}\n                <List.Item.Brief>\n                  {dayjs(task.startDate).format(\"YYYY-MM-DD\")}\n                  {task.repeatType !== \"none\" ? ` - ${dayjs(task.endDate).format(\"YYYY-MM-DD\")}` : null}\n                  &nbsp;\n                  {`${timeFormat(task.startTime)}-${timeFormat(task.endTime)}`}\n                </List.Item.Brief>\n                <List.Item.Brief>\n                  {task.repeatType === \"day\" ? <Tag selected >每天</Tag> : null}\n                  {task.repeatType === \"weekday\" ? <Tag selected >工作日</Tag> : null}\n                  {task.repeatType === \"weekend\" ? <Tag selected >周末</Tag> : null}\n                  {task.repeatType === \"other\" ? task.repeatDays.map(v => <Tag selected key={v}>{v}</Tag>) : null}\n                </List.Item.Brief>\n              </List.Item>\n            </SwipeAction>\n          )}\n        </List>\n        {props.children}\n      </div>\n    </Drawer>\n  </div>\n}\nexport default TaskList ","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom'\n\n// import logo from './logo.svg';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\nimport './App.css';\nimport Hanzi from './pages/hanzi/index';\nimport Setting from './pages/setting'\nimport Layout from './layout/index'\nimport Inspect from './pages/inspect';\nimport Clock from './pages/task-clock';\nimport TaskList from './pages/task-list/index';\n// declare var global: any;\ndeclare var window: any;\n\n// global = window;\nwindow._czc = window._czc || [];\n\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Switch>\n          {/* <Route path=\"/\" >\n            <Redirect to='/hanzi' />\n          </Route> */}\n          <Redirect exact path=\"/\" to=\"/task-clock\" />\n          <Route path=\"/\" children={(props: JSX.IntrinsicAttributes & { [x: string]: any; children: any; history: any; location: any; }) => <Layout {...props} >\n            <Route path='/hanzi' component={Hanzi} />\n            <Route path='/task-list' component={TaskList} />\n            <Route path='/setting' component={Setting} />\n            <Route path='/task-clock' component={Clock} />\n            <Route path='/inspect' component={Inspect} />\n            {/* <Route path='/mine' component={Mine} /> */}\n          </Layout>} />\n        </Switch>\n      </HashRouter>\n    </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.update();\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}